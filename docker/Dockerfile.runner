# ---- Base Stage ----
FROM node:20-alpine AS base
WORKDIR /usr/src/app
ENV NODE_ENV=production

# turbo is needed to build specific apps
RUN npm install -g turbo

# ---- Dependencies Stage ----
FROM base AS deps
WORKDIR /usr/src/app

# Disable husky in container
ENV HUSKY=0
ENV NODE_ENV=development

# Copy root config files
COPY package.json package-lock.json turbo.json ./

# Copy all source code
COPY ./packages ./packages
COPY ./apps ./apps

# Copy only workspace manifests first (for caching)
#COPY packages/*/package.json ./packages/
#COPY apps/*/package.json ./apps/

# Install all dependencies (dev + prod) for building
RUN npm ci 
RUN npm run build:packages

# ---- Build Stage ----
FROM deps AS builder
WORKDIR /usr/src/app

# Build args for dynamic app selection and DB URL
ARG APP
ARG DB_URL
ENV DATABASE_URL=$DB_URL

# Generate Prisma client once (better caching & faster builds)
ENV npm_config_cache=/tmp/.npm
RUN npm run generate:db

# Build only the selected app
RUN turbo build --filter=$APP...

# ---- Runtime Stage ----
FROM base AS runner
WORKDIR /usr/src/app

ARG APP
ARG APP_PORT=3000
ARG DB_URL
ENV DATABASE_URL=$DB_URL
ENV NODE_ENV=production

# Copy built app and dependencies
COPY --from=builder /usr/src/app/apps/$APP ./apps/$APP
COPY --from=deps /usr/src/app/node_modules ./node_modules
COPY --from=deps /usr/src/app/package.json ./package.json

WORKDIR /usr/src/app/apps/$APP

EXPOSE $APP_PORT

# This expects scripts like start:backend, start:webhook, start:web, start:validator
CMD ["npm", "run", "start:$APP"]