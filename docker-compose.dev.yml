version: "3.9"

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3005:3000"
    depends_on:
      - prometheus
    networks:
      - monitoring
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=http://localhost:3001

  http:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.http
    container_name: http
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - monitoring
    depends_on:
      - prometheus
      - grafana
    environment:
      - NODE_ENV=development
      - PORT=3000

  validator:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.validator
    container_name: validator
    restart: unless-stopped
    ports:
      - "3002:3000"
    networks:
      - monitoring
    depends_on:
      - prometheus
      - grafana
    environment:
      - NODE_ENV=development
      - PORT=3000

  frontend:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.frontend
    container_name: frontend
    restart: unless-stopped
    ports:
      - "4000:3000"
    networks:
      - monitoring
    depends_on:
      - http
      - validator
      - webhook

  webhook:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.webhook
    container_name: webhook
    restart: unless-stopped
    ports:
      - "3003:3000"
    networks:
      - monitoring
    depends_on:
      - http
      - validator

networks:
  monitoring:

volumes:
  prometheus_data:
