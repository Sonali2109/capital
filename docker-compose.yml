services:
  postgres:
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: mysecretpassword
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - monitoring

  redis:
    image: redis/redis-stack:latest
    restart: unless-stopped
    ports:
      - "6379:6379"
      - "8001:8001"
    volumes:
      - redisdata:/data
    networks:
      - monitoring
  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - monitoring
  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    ports:
      - "3001:3000"
    networks:
      - monitoring
    depends_on:
      - prometheus
    environment:
        - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}

  node-exporter:
    image: prom/node-exporter
    ports:
      - "9100:9100"
    networks:
      - monitoring

  # loki:
  #   image: grafana/loki
  #   ports:
  #     - "3100:3100"
  #   volumes:
  #     - ./loki/loki-config.yml:/etc/loki/local-config.yaml

  # promtail:
  #   image: grafana/promtail
  #   volumes:
  #     - ./loki/promtail-config.yml:/etc/promtail/config.yml
  #     - /var/log:/var/log
  #   depends_on:
  #     - loki

  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.http
    restart: unless-stopped
    ports:
      - "3001:3001"
    env_file:
      - ./apps/http/.env
    environment:
      - DATABASE_URL=postgresql://postgres:mysecretpassword@postgres:5432/postgres
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
      - prometheus
    networks:
      - monitoring
  validator:
    build:
      context: .
      dockerfile: docker/Dockerfile.validator
    restart: unless-stopped
    ports:
      - "3003:3003"
    env_file:
      - ./apps/validator/.env
    environment:
      - DATABASE_URL=postgresql://postgres:mysecretpassword@postgres:5432/postgres
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
      - prometheus
    networks:
      - monitoring
  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.web
      args:
        DB_URL: postgresql://postgres:mysecretpassword@postgres:5432/postgres
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://postgres:mysecretpassword@postgres:5432/postgres
    depends_on:
      - postgres
      - redis
      - prometheus
    networks:
      - monitoring
  webhook:
    build:
      context: .
      dockerfile: docker/Dockerfile.webhook
    restart: unless-stopped
    ports:
    - "3002:3002"
    environment:
      - DATABASE_URL=postgresql://postgres:mysecretpassword@postgres:5432/postgres
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
      - prometheus
    networks:
      - monitoring

volumes:
  pgdata:
  redisdata:
  prometheus_data:

networks:
  monitoring: